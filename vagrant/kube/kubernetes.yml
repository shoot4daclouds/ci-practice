---
- hosts: all
  become: yes
  vars:
    kube_mgmt_network: "172.28.128.0/24"
  tasks:
    - name: install kubernetes packages
      yum: 
        name:  ['kubelet', 'kubeadm','kubectl']
        state: present

    - name: configure fstab to disable swap
      shell: "sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab"
      register: swapoff

    - name: swapoff
      shell: "swapoff -a"
      when: swapoff.changed

    - name: configure sysctl
      modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - overlay
        - br_netfilter
      register: sysctl

    - name: sysctl system
      shell: "sysctl --system"
      when: sysctl.changed

    - name: add docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/

    - name: install docker packages
      yum: 
        name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'docker-ce', 'docker-ce-cli','containerd.io']
        state: present

    - name: start and enable docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: ensure firewalld is started and enabled
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: configure firewalld on master
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        zone: public
      with_items:
        - 6443/tcp
        - 2379-2380/tcp
        - 10250-10251/tcp
        - 5473/tcp
        - 179/tcp
        - 4789/udp
        - 8285/udp
        - 8472/udp
      when: "'master' in group_names"
      notify: reload firewalld

    - name: configure firewalld on workers
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        zone: public
      with_items:
        - 30000-32767/tcp
        - 10250/tcp
        - 5473/tcp
        - 179/tcp
        - 4789/udp
        - 8285/udp
        - 8472/udp
      when: "'worker' in group_names"
      notify: reload firewalld

    - name: ensure kubelet enabled
      service:
        name: kubelet
        enabled: yes

    - name: pull container images
      shell: "kubeadm config images pull"
      when: "'master' in group_names"

    - name: add dns name to /etc/hosts - master
      lineinfile:
        path: /etc/hosts
        regexp: "^{{ ansible_enp0s8.ipv4.address }} k8s-cluster.ci.local"
        line: "{{ ansible_enp0s8.ipv4.address }} k8s-cluster.ci.local"
      when: "'master' in group_names"

    - name: initialize control-plane
      shell: | 
        kubeadm init \
        --pod-network-cidr=10.244.0.0/16 \
        --upload-certs \
        --control-plane-endpoint=k8s-cluster.ci.local
      register: init
      when: "'master' in group_names"

    - name: configure kubectl
      shell: | 
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: "'master' in group_names"

    - name: pause for init
      pause: 
        minutes: 3
      when: "'master' in group_names"

    - name: install network plugin
      shell: "kubectl create -f {{ item }}"
      with_items:
        - https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: "'master' in group_names"

    - name: pause for init
      pause: 
        minutes: 1
      when: "'master' in group_names"

    - name: create jenkins service account
      shell: "kubectl -n default create sa jenkins"
      when: "'master' in group_names"

    - name: create clusterrolebinding for jenkins
      shell: "kubectl create clusterrolebinding jenkins --clusterrole cluster-admin --serviceaccount=default:jenkins"
      when: "'master' in group_names"

    - name: get sa jenkins secret 
      shell: "kubectl get -n default sa/jenkins --template='{{ '{{' }}range .secrets{{ '}}' }}{{ '{{' }} .name {{ '}}' }} {{ '{{' }}end{{ '}}' }}' | xargs kubectl -n default get secret --template='{{ '{{' }} if .data.token {{ '}}' }}{{ '{{' }} .data.token {{ '}}' }}{{ '{{' }}end{{ '}}' }}' | head -n 1 | base64 -d -"
      register: jenkins_token
      when: "'master' in group_names"

    - name: add dns name to /etc/hosts - workers
      blockinfile:
        path: /etc/hosts
        block: |
          {{ hostvars[groups['all'][0]]['ansible_enp0s8']['ipv4']['address'] }} k8s-cluster.ci.local
      when: "'worker' in group_names"

    - name: add route 
      command: "ip route add {{ kube_mgmt_network }} dev enp0s8"

    - name: output worker join command
      debug:
        msg: "{{ init.stdout }}"
      when: "'master' in group_names"
    
    - name: output jenkins token
      debug:
        msg: "{{ jenkins_token.stdout }}"
      when: "'master' in group_names"
    
    - name: add flannel config - workers
      blockinfile:
        path: /run/flannel/subnet.env
        block: |
          FLANNEL_NETWORK=10.244.0.0/16
          FLANNEL_SUBNET=10.244.0.1/24
          FLANNEL_MTU=1450
          FLANNEL_IPMASQ=true
      when: "'worker' in group_names"
      
  handlers:
    - name: reload firewalld
      service: 
        name: firewalld
        state: reloaded
